#include <Arduino.h>
#include <WiFi.h>
#include <WiFiUdp.h>
#define BUFFER_SIZE 1024
#define SAMPLE_RATE 10000  // Частота дискретизации
#define CUT_OFF_FREQ 50    // Частота среза 500
const int udpPort = 8080;
WiFiUDP udp;
int i = 0, j = 0;
float alpha = 0.0;
float y_prev = 0.0;
float x_prev = 0.0;
char incomingPacket;
//int buf[BUFFER_SIZE] = {0};
float x[1] = {0};
int flag = 0;
float y;
int packetSize;

float lowPassFilter(float x) {
  alpha = CUT_OFF_FREQ / (SAMPLE_RATE + CUT_OFF_FREQ);
  float y = alpha * x + (1000 - alpha) * y_prev; //1 
  y_prev = y;
  x_prev = x;
  i++;
  return y;
}

void setup() {
   Serial.begin(115200);
  
  WiFi.begin("ASUS", "9137050077");

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  
  udp.begin(udpPort);
  Serial.println("UDP server started");
}

void loop() {
  
  packetSize = udp.parsePacket();
  if (packetSize) {
    Serial.print("Received packet of size ");
    Serial.println(packetSize);
    
    udp.read((char *)x, packetSize);
    Serial.print("From ");
    IPAddress remoteIP = udp.remoteIP();
    Serial.print(remoteIP);
    Serial.print(", port ");
    Serial.println(udp.remotePort());
    
    Serial.print("Message: ");
    //Serial.print(incomingPacket);
    Serial.print(x[0]); Serial.print(" ");
    flag=1;
  }
  if (flag == 1){
    y = lowPassFilter(x[0]);
    Serial.print("y = "); Serial.println(y);
    flag = 0;
     delay(1000);
 }
}


